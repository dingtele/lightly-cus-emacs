;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; -------------------------------------------------------------------------
;; Tabspaces Session File for Emacs
;; -------------------------------------------------------------------------
;; Created Tue Aug 12 16:28:58 2025

;; Tabs and buffers:
(setq tabspaces--session-list '((nil "*scratch*" (((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 60) (min-pixel-width . 70) (min-pixel-height-ignore . 60) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 15) (min-pixel-width-safe . 14)) leaf (pixel-width . 1920) (pixel-height . 947) (total-width . 274) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (parameters (context)) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 t nil) (margins 61 . 61) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2742) (start . 1748)) (prev-buffers ("init-edit.el<.emacs.d>" 7091 7094)))) (nil "*scratch*" (((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 60) (min-pixel-width . 70) (min-pixel-height-ignore . 60) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 15) (min-pixel-width-safe . 14)) leaf (pixel-width . 1920) (pixel-height . 947) (total-width . 274) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (parameters (context)) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 t nil) (margins 61 . 61) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2742) (start . 1748)) (prev-buffers ("init-edit.el<.emacs.d>" 7091 7094)))) (nil "Reading" (((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 60) (min-pixel-width . 70) (min-pixel-height-ignore . 60) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 15) (min-pixel-width-safe . 14)) leaf (pixel-width . 1920) (pixel-height . 947) (total-width . 274) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 8 8 t nil) (margins 61 . 61) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (("/home/madcomet/.emacs.d/lisp/init-edit.el" "/home/madcomet/.emacs.d/lisp/init-hydra.el" "/home/madcomet/.emacs.d/lisp/init-dict.el" "/home/madcomet/emacs-distros/centaur/lisp/init-edit.el" "/home/madcomet/emacs-distros/centaur/lisp/init-dap.el" "/home/madcomet/emacs-distros/centaur/lisp/init-ui.el" "/home/madcomet/emacs-distros/centaur/lisp/init-reader.el" "/home/madcomet/.emacs.d/init.el" "/home/madcomet/.emacs.d/elpa/hydra-20250316.1254/hydra.el") ".emacs.d" (((min-height . 8) (min-width . 30) (min-height-ignore . 8) (min-width-ignore . 15) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 120) (min-pixel-width . 210) (min-pixel-height-ignore . 120) (min-pixel-width-ignore . 105) (min-pixel-height-safe . 30) (min-pixel-width-safe . 42)) hc (pixel-width . 1920) (pixel-height . 947) (total-width . 274) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (hc (pixel-width . 1148) (pixel-height . 947) (total-width . 164) (total-height . 63) (normal-height . 1.0) (normal-width . 0.5979166666666667) (combination-limit) (vc (pixel-width . 686) (pixel-height . 947) (total-width . 98) (total-height . 63) (normal-height . 1.0) (normal-width . 0.5979166666666667) (combination-limit . t) (leaf (pixel-width . 686) (pixel-height . 62) (total-width . 98) (total-height . 4) (normal-height . 0.07233368532206969) (normal-width . 1.0) (parameters (context)) (buffer "init-edit.el<.emacs.d>" (selected) (hscroll . 0) (fringes 8 8 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 7094) (start . 7091))) (leaf (last . t) (pixel-width . 686) (pixel-height . 885) (total-width . 98) (total-height . 59) (normal-height . 0.9276663146779303) (normal-width . 1.0) (buffer "*Backtrace*" (selected . t) (hscroll . 0) (fringes 8 8 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 11197) (start . 11197)))) (leaf (last . t) (pixel-width . 462) (pixel-height . 947) (total-width . 66) (total-height . 63) (normal-height . 1.0) (normal-width . 0.40208333333333335) (buffer "*helpful macro: meow-define-state*" (selected) (hscroll . 0) (fringes 8 8 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2139) (start . 1202)))) (leaf (last . t) (pixel-width . 772) (pixel-height . 947) (total-width . 110) (total-height . 63) (normal-height . 1.0) (normal-width . 0.40208333333333335) (buffer "*helpful variable: meow-state-mode-alist*" (selected) (hscroll . 0) (fringes 8 8 t nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))))))