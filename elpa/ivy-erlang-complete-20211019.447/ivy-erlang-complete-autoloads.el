;;; ivy-erlang-complete-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from ivy-erlang-complete.el

(autoload 'ivy-erlang-complete-autosetup-project-root "ivy-erlang-complete" "\
Automatically setup, and return, erlang project root." t)
(autoload 'ivy-erlang-complete-init "ivy-erlang-complete" "\
Config ivy-erlang-complete by default." t)
(autoload 'ivy-erlang-complete-show-doc-at-point "ivy-erlang-complete" "\
Show doc for function from standart library." t)
(autoload 'ivy-erlang-complete-reparse "ivy-erlang-complete" "\
Reparse macros and recors for completion in current buffer." t)
(autoload 'ivy-erlang-complete-set-project-root "ivy-erlang-complete" "\
Set root for current project." t)
(autoload 'ivy-erlang-complete "ivy-erlang-complete" "\
Erlang completion at point." t)
(autoload 'ivy-erlang-complete--find-definition "ivy-erlang-complete" "\
Search THING definition in DIRECTORY-PATH.

(fn THING)")
(autoload 'ivy-erlang-complete-find-spec "ivy-erlang-complete" "\
Find spec at point.  It also find callback definition." t)
(autoload 'ivy-erlang-complete-find-definition "ivy-erlang-complete" "\
Find erlang definition." t)
(autoload 'ivy-erlang-complete-find-references "ivy-erlang-complete" "\
Find erlang references." t)
(autoload 'ivy-erlang-complete-find-file "ivy-erlang-complete" "\
Find file in current project." t)
(register-definition-prefixes "ivy-erlang-complete" '("ivy-erlang-complete-"))

;;; End of scraped data

(provide 'ivy-erlang-complete-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; ivy-erlang-complete-autoloads.el ends here
